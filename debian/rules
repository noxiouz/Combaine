#!/usr/bin/make -f
# -*- makefile -*-
# Sample debian/rules that uses debhelper.
# This file was originally written by Joey Hess and Craig Small.
# As a special exception, when this file is copied by dh-make into a
# dh-make output file, you may use that output file without restriction.
# This special exception was added by Craig Small in version 0.37 of dh-make.

# Uncomment this to turn on verbose mode.
#export DH_VERBOSE=1
#export DEB_VERBOSE_ALL=1

PACKAGE_PATH=$(CURDIR)/src/github.com/noxiouz/Combaine
BUILD_DIR=$(CURDIR)/build

COMBAINE_LIB_PATH=/usr/lib/yandex/combaine
CORE_APPS_PATH=$(COMBAINE_LIB_PATH)/core-apps
DEB_DESTDIR=$(CURDIR)/debian/tmp/


export GOPATH=$(CURDIR)

%:
	dh $@ --with python2

override_dh_install:
	make -f file_for_make

	install -d $(DEB_DESTDIR)usr/bin
	install -m755 $(BUILD_DIR)/main_combainer  $(DEB_DESTDIR)usr/bin/combainer

	# core-parsing
	install -d $(DEB_DESTDIR)$(CORE_APPS_PATH)/parsing-core
	install -m755 $(BUILD_DIR)/main_parsing-core  $(DEB_DESTDIR)$(CORE_APPS_PATH)/parsing-core
	install -m664 deploy/manifests/manifest_parsing-core.json $(DEB_DESTDIR)$(CORE_APPS_PATH)/parsing-core
	install -m755 deploy/scripts/deploy_parsing-core.sh $(DEB_DESTDIR)$(CORE_APPS_PATH)/parsing-core/deploy.sh
	# core-aggregate
	install -d $(DEB_DESTDIR)$(CORE_APPS_PATH)/aggregate-core
	install -m755 aggregate_core.py  $(DEB_DESTDIR)$(CORE_APPS_PATH)/aggregate-core
	install -m664 deploy/manifests/manifest_aggregate-core.json $(DEB_DESTDIR)$(CORE_APPS_PATH)/aggregate-core
	install -m755 deploy/scripts/deploy_aggregate-core.sh $(DEB_DESTDIR)$(CORE_APPS_PATH)/aggregate-core/deploy.sh
	# cfgmanager
	install -d $(DEB_DESTDIR)$(CORE_APPS_PATH)/cfgmanager
	install -m755 $(BUILD_DIR)/main_cfgmanager  $(DEB_DESTDIR)$(CORE_APPS_PATH)/cfgmanager
	install -m664 deploy/manifests/manifest_cfgmanager.json $(DEB_DESTDIR)$(CORE_APPS_PATH)/cfgmanager
	install -m755 deploy/scripts/deploy_cfgmanager.sh $(DEB_DESTDIR)$(CORE_APPS_PATH)/cfgmanager/deploy.sh
	# parsingApp
	install -d $(DEB_DESTDIR)$(CORE_APPS_PATH)/parsing-app
	install -m755 parsing_app.py  $(DEB_DESTDIR)$(CORE_APPS_PATH)/parsing-app
	install -m664 deploy/manifests/manifest_parsing-app.json $(DEB_DESTDIR)$(CORE_APPS_PATH)/parsing-app
	install -m755 deploy/scripts/deploy_parsing-app.sh $(DEB_DESTDIR)$(CORE_APPS_PATH)/parsing-app/deploy.sh
	# average
	install -d $(DEB_DESTDIR)$(CORE_APPS_PATH)/aggregate-average
	install -m755 plugins/aggregators/average.py  $(DEB_DESTDIR)$(CORE_APPS_PATH)/aggregate-average
	install -m664 deploy/manifests/manifest_aggregate-average.json $(DEB_DESTDIR)$(CORE_APPS_PATH)/aggregate-average
	install -m755 deploy/scripts/deploy_aggregate-average.sh $(DEB_DESTDIR)$(CORE_APPS_PATH)/aggregate-average/deploy.sh
	# quant
	install -d $(DEB_DESTDIR)$(CORE_APPS_PATH)/aggregate-quant
	install -m755 plugins/aggregators/quant.py  $(DEB_DESTDIR)$(CORE_APPS_PATH)/aggregate-quant
	install -m664 deploy/manifests/manifest_aggregate-quant.json $(DEB_DESTDIR)$(CORE_APPS_PATH)/aggregate-quant
	install -m755 deploy/scripts/deploy_aggregate-quant.sh $(DEB_DESTDIR)$(CORE_APPS_PATH)/aggregate-quant/deploy.sh
	# custom
	install -d $(DEB_DESTDIR)$(CORE_APPS_PATH)/aggregate-custom
	install -m755 plugins/aggregators/custom.py  $(DEB_DESTDIR)$(CORE_APPS_PATH)/aggregate-custom
	install -m664 deploy/manifests/manifest_aggregate-custom.json $(DEB_DESTDIR)$(CORE_APPS_PATH)/aggregate-custom
	install -m755 deploy/scripts/deploy_aggregate-custom.sh $(DEB_DESTDIR)$(CORE_APPS_PATH)/aggregate-custom/deploy.sh
	# agave
	install -d $(DEB_DESTDIR)$(CORE_APPS_PATH)/agave
	install -m755 $(BUILD_DIR)/main_agave  $(DEB_DESTDIR)$(CORE_APPS_PATH)/agave
	install -m664 deploy/manifests/manifest_agave.json $(DEB_DESTDIR)$(CORE_APPS_PATH)/agave
	install -m755 deploy/scripts/deploy_agave.sh $(DEB_DESTDIR)$(CORE_APPS_PATH)/agave/deploy.sh
	# graphite
	install -d $(DEB_DESTDIR)$(CORE_APPS_PATH)/graphite
	install -m755 $(BUILD_DIR)/main_graphite  $(DEB_DESTDIR)$(CORE_APPS_PATH)/graphite
	install -m664 deploy/manifests/manifest_graphite.json $(DEB_DESTDIR)$(CORE_APPS_PATH)/graphite
	install -m755 deploy/scripts/deploy_graphite.sh $(DEB_DESTDIR)$(CORE_APPS_PATH)/graphite/deploy.sh
	# juggler
	install -d $(DEB_DESTDIR)$(CORE_APPS_PATH)/juggler
	install -m755 senders/juggler/juggler.py  $(DEB_DESTDIR)$(CORE_APPS_PATH)/juggler
	install -m664 deploy/manifests/manifest_juggler.json $(DEB_DESTDIR)$(CORE_APPS_PATH)/juggler
	install -m755 deploy/scripts/deploy_juggler.sh $(DEB_DESTDIR)$(CORE_APPS_PATH)/juggler/deploy.sh
	# timetail
	# install -d $(DEB_DESTDIR)$(CORE_APPS_PATH)/timetail
	# install -m755 $(BUILD_DIR)/main_timetail  $(DEB_DESTDIR)$(CORE_APPS_PATH)/timetail
	# install -m664 deploy/manifests/manifest_timetail.json $(DEB_DESTDIR)$(CORE_APPS_PATH)/timetail
	# install -m755 deploy/scripts/deploy_timetail.sh $(DEB_DESTDIR)$(CORE_APPS_PATH)/timetail/deploy.sh

	# combaine-tuner
	install -d $(DEB_DESTDIR)$(COMBAINE_LIB_PATH)/presetting
	install -m664 deploy/presetting/profile.json $(DEB_DESTDIR)$(COMBAINE_LIB_PATH)/presetting
	install -m664 deploy/presetting/runlist.json $(DEB_DESTDIR)$(COMBAINE_LIB_PATH)/presetting
	install -m755 deploy/presetting/presetting.py $(DEB_DESTDIR)$(COMBAINE_LIB_PATH)/presetting

	# mysql plugin
	install -d $(DEB_DESTDIR)/usr/lib/yandex/combaine/plugins/mysqldg
	install -m755 plugins/datagrid/mysqldg.py $(DEB_DESTDIR)/usr/lib/yandex/combaine/plugins/mysqldg
	install -m664 deploy/manifests/manifest_mysqldg.json $(DEB_DESTDIR)/usr/lib/yandex/combaine/plugins/mysqldg/

	# handystats plugin
	install -d $(DEB_DESTDIR)$(COMBAINE_LIB_PATH)/custom
	install -m644 plugins/aggregators/custom/handystats.py $(DEB_DESTDIR)$(COMBAINE_LIB_PATH)/custom/handystats.py

	dh_auto_install
	dh_install

# cleanbuilddir/combaine-plugin-mysql::
# 	rm -rf $(DEB_DESTDIR)/usr/lib/yandex/combaine/plugins/mysqldg

clean::
	#rm -rf src/ || true
	#rm -rf pkg/ || true
	dh_clean
	rm -rf $(PACKAGE_PATH)
	rm -rf $(BUILD_DIR)
	find . -type l | xargs rm -v $1 || true

