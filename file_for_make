.PHONY: clean

# pwd
CURDIR:=$(shell pwd)

MAIN_FILES_DIR=$(CURDIR)/main_files

# packages for go
PACKAGE_PATH=$(CURDIR)/src/github.com/noxiouz

# build dir
BUILD_DIR=$(CURDIR)/build

#export GOPATH=$(CURDIR)

OS := $(shell uname)
ifeq ($(OS), Darwin)
	export CGO_CFLAGS=-I/usr/local/include/zookeeper
	export BUILDARGS=-race
endif

all: deps combainer_ agave_ parsing_ graphite_ razladki_ cbb_ solomon_

deps:
	go get gopkg.in/yaml.v2
	go get github.com/cocaine/cocaine-framework-go/cocaine
	go get github.com/Sirupsen/logrus
	go get github.com/gorilla/mux
	go get github.com/mitchellh/mapstructure
	go get github.com/kr/pretty
	go get golang.org/x/net/context
	mkdir -vp $(PACKAGE_PATH)
	if [ ! -d $(CURDIR)/src/github.com/noxiouz/Combaine ];then\
		ln -vs $(CURDIR) $(CURDIR)/src/github.com/noxiouz/Combaine; fi;

combainer_: deps

	go build $(BUILDARGS) -o $(BUILD_DIR)/main_combainer $(MAIN_FILES_DIR)/combainer_main.go

parsing_: deps
	go build -o $(BUILD_DIR)/main_parsing-core $(MAIN_FILES_DIR)/parsing_main.go

agave_: deps
	go build -o $(BUILD_DIR)/main_agave $(MAIN_FILES_DIR)/agave_main.go

graphite_: deps
	go build -o $(BUILD_DIR)/main_graphite $(MAIN_FILES_DIR)/graphite_main.go

razladki_: deps
	go build -o $(BUILD_DIR)/main_razladki $(MAIN_FILES_DIR)/razladki_main.go

cbb_: deps
	go build -o $(BUILD_DIR)/main_cbb $(MAIN_FILES_DIR)/cbb_main.go

solomon_: deps
	go build -o $(BUILD_DIR)/main_solomon $(MAIN_FILES_DIR)/solomon_main.go


fixture: deps
	go run tests/fixtures/gen_fixtures.go

clean::
	rm -rf $(BUILD_DIR) || true

test:
	go get github.com/stretchr/testify/assert
	go test -v ./senders/...
	go test -v ./fetchers/...
	go test -v ./combainer/...
